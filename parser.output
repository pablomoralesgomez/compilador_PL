Grammar

    0 $accept: program $end

    1 program: header global functionArea

    2 header: %empty
    3       | HEADER '{' headerWrapper '}'

    4 headerWrapper: %empty
    5              | headerWrapper headerdcl

    6 $@1: %empty

    7 headerdcl: typeFunction ID $@1 '(' paramWrapper ')' ';'

    8 paramWrapper: %empty
    9             | paramWrapperRecursive

   10 $@2: %empty

   11 paramWrapperRecursive: $@2 param

   12 $@3: %empty

   13 paramWrapperRecursive: paramWrapperRecursive ',' $@3 param

   14 param: typeVariable ID
   15      | typePrimitive '[' ']' ID

   16 global: %empty

   17 $@4: %empty

   18 global: GLOBAL '{' $@4 globalWrapper '}'

   19 globalWrapper: %empty
   20              | globalWrapper variabledcl

   21 functionArea: functionWrapper main functionWrapper

   22 functionWrapper: %empty
   23                | functionWrapper functiondcl

   24 $@5: %empty

   25 $@6: %empty

   26 functiondcl: typeFunction ID $@5 '(' paramWrapper ')' '{' $@6 statementWrapper '}'

   27 main: INT MAIN '(' ')' '{' statementWrapper '}'

   28 statementWrapper: %empty
   29                 | statementWrapper statement

   30 statement: loop
   31          | conditional
   32          | variabledcl
   33          | functionCall ';'
   34          | varAssign ';'
   35          | BREAK ';'
   36          | PRINT '(' printeableThings ')' ';'
   37          | CONTINUE ';'
   38          | RETURN expression ';'

   39 printeableThings: expression
   40                 | LIT_STRING

   41 loop: forLoop
   42     | whileLoop
   43     | DO whileLoop

   44 @7: %empty

   45 @8: %empty

   46 @9: %empty

   47 @10: %empty

   48 $@11: %empty

   49 $@12: %empty

   50 $@13: %empty

   51 $@14: %empty

   52 forLoop: @7 @8 @9 @10 FOR '(' $@11 variabledcl $@12 $@13 expression ';' $@14 varAssign ')' '{' statementWrapper '}'

   53 @15: %empty

   54 @16: %empty

   55 @17: %empty

   56 @18: %empty

   57 $@19: %empty

   58 $@20: %empty

   59 whileLoop: @15 @16 @17 @18 $@19 WHILE '(' expression ')' $@20 '{' statementWrapper '}'

   60 @21: %empty

   61 @22: %empty

   62 $@23: %empty

   63 conditional: @21 @22 $@23 ifCond elifCond elseCond

   64 @24: %empty

   65 $@25: %empty

   66 $@26: %empty

   67 ifCond: @24 IF '(' expression ')' $@25 '{' statementWrapper $@26 '}'

   68 elifCond: %empty

   69 @27: %empty

   70 $@28: %empty

   71 $@29: %empty

   72 elifCond: elifCond @27 ELIF '(' expression ')' $@28 '{' statementWrapper $@29 '}'

   73 elseCond: %empty
   74         | ELSE '{' statementWrapper '}'

   75 varAssign: ID '=' expression
   76          | ID ASSIGN_ADD expression
   77          | ID ASSIGN_SUBS expression
   78          | ID ASSIGN_MULT expression
   79          | ID ASSIGN_DIV expression

   80 variabledcl: typePrimitive ID '=' expression ';'
   81            | STRING ID '=' LIT_STRING ';'
   82            | arraydcl

   83 arraydcl: typePrimitive '[' LIT_INT ']' ID ';'
   84         | typePrimitive '[' ']' ID '=' ID ';'

   85 $@30: %empty

   86 arraydcl: typePrimitive '[' ']' ID '=' '{' $@30 arrayWrapper '}' ';'

   87 arrayWrapper: %empty
   88             | array

   89 $@31: %empty

   90 array: $@31 expression

   91 $@32: %empty

   92 array: array ',' $@32 expression

   93 expression: functionCall
   94           | ID '[' LIT_INT ']'
   95           | ID
   96           | literals
   97           | NOT expression
   98           | '-' expression
   99           | '(' expression ')'
  100           | expression EQUALS expression
  101           | expression NOT_EQ expression
  102           | expression LESS_EQ expression
  103           | expression BIGGER_EQ expression
  104           | expression '>' expression
  105           | expression '<' expression
  106           | expression OR expression
  107           | expression AND expression
  108           | expression '+' expression
  109           | expression '-' expression
  110           | expression '*' expression
  111           | expression '/' expression
  112           | expression '^' expression
  113           | expression '%' expression

  114 literals: LIT_INT
  115         | LIT_FLOAT
  116         | LIT_CHAR
  117         | boolLiteral

  118 boolLiteral: TRUE
  119            | FALSE

  120 $@33: %empty

  121 functionCall: ID $@33 '(' paramsFunctionCallWrapper ')'

  122 paramsFunctionCallWrapper: %empty
  123                          | paramsFunctionCall

  124 $@34: %empty

  125 paramsFunctionCall: paramsFunctionCall ',' $@34 expression

  126 $@35: %empty

  127 paramsFunctionCall: $@35 expression

  128 typePrimitive: BOOL
  129              | CHAR
  130              | INT
  131              | FLOAT

  132 typeVariable: STRING
  133             | typePrimitive

  134 typeFunction: VOID
  135             | typePrimitive


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 113
    '(' (40) 7 26 27 36 52 59 67 72 99 121
    ')' (41) 7 26 27 36 52 59 67 72 99 121
    '*' (42) 110
    '+' (43) 108
    ',' (44) 13 92 125
    '-' (45) 98 109
    '/' (47) 111
    ';' (59) 7 33 34 35 36 37 38 52 80 81 83 84 86
    '<' (60) 105
    '=' (61) 75 80 81 84 86
    '>' (62) 104
    '[' (91) 15 83 84 86 94
    ']' (93) 15 83 84 86 94
    '^' (94) 112
    '{' (123) 3 18 26 27 52 59 67 72 74 86
    '}' (125) 3 18 26 27 52 59 67 72 74 86
    error (256)
    IF (258) 67
    ELIF (259) 72
    ELSE (260) 74
    WHILE (261) 59
    DO (262) 43
    FOR (263) 52
    CONTINUE (264) 37
    BREAK (265) 35
    AND (266) 107
    OR (267) 106
    NOT (268) 97
    EQUALS (269) 100
    NOT_EQ (270) 101
    LESS_EQ (271) 102
    BIGGER_EQ (272) 103
    VOID (273) 134
    INT (274) 27 130
    FLOAT (275) 131
    CHAR (276) 129
    BOOL (277) 128
    STRING (278) 81 132
    HEADER (279) 3
    GLOBAL (280) 18
    RETURN (281) 38
    PRINT (282) 36
    ASSIGN_ADD (283) 76
    ASSIGN_SUBS (284) 77
    ASSIGN_MULT (285) 78
    ASSIGN_DIV (286) 79
    LIT_INT <int4> (287) 83 94 114
    LIT_FLOAT <fl> (288) 115
    LIT_CHAR <ch> (289) 116
    LIT_STRING <str> (290) 40 81
    TRUE (291) 118
    FALSE (292) 119
    ID <str> (293) 7 14 15 26 75 76 77 78 79 80 81 83 84 86 94 95 121
    MAIN (294) 27


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    program (58)
        on left: 1
        on right: 0
    header (59)
        on left: 2 3
        on right: 1
    headerWrapper (60)
        on left: 4 5
        on right: 3 5
    headerdcl (61)
        on left: 7
        on right: 5
    $@1 (62)
        on left: 6
        on right: 7
    paramWrapper (63)
        on left: 8 9
        on right: 7 26
    paramWrapperRecursive (64)
        on left: 11 13
        on right: 9 13
    $@2 (65)
        on left: 10
        on right: 11
    $@3 (66)
        on left: 12
        on right: 13
    param (67)
        on left: 14 15
        on right: 11 13
    global (68)
        on left: 16 18
        on right: 1
    $@4 (69)
        on left: 17
        on right: 18
    globalWrapper (70)
        on left: 19 20
        on right: 18 20
    functionArea (71)
        on left: 21
        on right: 1
    functionWrapper (72)
        on left: 22 23
        on right: 21 23
    functiondcl (73)
        on left: 26
        on right: 23
    $@5 (74)
        on left: 24
        on right: 26
    $@6 (75)
        on left: 25
        on right: 26
    main (76)
        on left: 27
        on right: 21
    statementWrapper (77)
        on left: 28 29
        on right: 26 27 29 52 59 67 72 74
    statement (78)
        on left: 30 31 32 33 34 35 36 37 38
        on right: 29
    printeableThings (79)
        on left: 39 40
        on right: 36
    loop (80)
        on left: 41 42 43
        on right: 30
    forLoop (81)
        on left: 52
        on right: 41
    @7 (82)
        on left: 44
        on right: 52
    @8 (83)
        on left: 45
        on right: 52
    @9 (84)
        on left: 46
        on right: 52
    @10 (85)
        on left: 47
        on right: 52
    $@11 (86)
        on left: 48
        on right: 52
    $@12 (87)
        on left: 49
        on right: 52
    $@13 (88)
        on left: 50
        on right: 52
    $@14 (89)
        on left: 51
        on right: 52
    whileLoop (90)
        on left: 59
        on right: 42 43
    @15 (91)
        on left: 53
        on right: 59
    @16 (92)
        on left: 54
        on right: 59
    @17 (93)
        on left: 55
        on right: 59
    @18 (94)
        on left: 56
        on right: 59
    $@19 (95)
        on left: 57
        on right: 59
    $@20 (96)
        on left: 58
        on right: 59
    conditional (97)
        on left: 63
        on right: 31
    @21 (98)
        on left: 60
        on right: 63
    @22 (99)
        on left: 61
        on right: 63
    $@23 (100)
        on left: 62
        on right: 63
    ifCond (101)
        on left: 67
        on right: 63
    @24 (102)
        on left: 64
        on right: 67
    $@25 (103)
        on left: 65
        on right: 67
    $@26 (104)
        on left: 66
        on right: 67
    elifCond (105)
        on left: 68 72
        on right: 63 72
    @27 (106)
        on left: 69
        on right: 72
    $@28 (107)
        on left: 70
        on right: 72
    $@29 (108)
        on left: 71
        on right: 72
    elseCond (109)
        on left: 73 74
        on right: 63
    varAssign (110)
        on left: 75 76 77 78 79
        on right: 34 52
    variabledcl (111)
        on left: 80 81 82
        on right: 20 32 52
    arraydcl (112)
        on left: 83 84 86
        on right: 82
    $@30 (113)
        on left: 85
        on right: 86
    arrayWrapper (114)
        on left: 87 88
        on right: 86
    array (115)
        on left: 90 92
        on right: 88 92
    $@31 (116)
        on left: 89
        on right: 90
    $@32 (117)
        on left: 91
        on right: 92
    expression <expr> (118)
        on left: 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113
        on right: 38 39 52 59 67 72 75 76 77 78 79 80 90 92 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 125 127
    literals <expr> (119)
        on left: 114 115 116 117
        on right: 96
    boolLiteral <expr> (120)
        on left: 118 119
        on right: 117
    functionCall <expr> (121)
        on left: 121
        on right: 33 93
    $@33 (122)
        on left: 120
        on right: 121
    paramsFunctionCallWrapper (123)
        on left: 122 123
        on right: 121
    paramsFunctionCall (124)
        on left: 125 127
        on right: 123 125
    $@34 (125)
        on left: 124
        on right: 125
    $@35 (126)
        on left: 126
        on right: 127
    typePrimitive <tip> (127)
        on left: 128 129 130 131
        on right: 15 80 83 84 86 133 135
    typeVariable <tip> (128)
        on left: 132 133
        on right: 14
    typeFunction <tip> (129)
        on left: 134 135
        on right: 7 26


State 0

    0 $accept: . program $end

    HEADER  shift, and go to state 1

    $default  reduce using rule 2 (header)

    program  go to state 2
    header   go to state 3


State 1

    3 header: HEADER . '{' headerWrapper '}'

    '{'  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: header . global functionArea

    GLOBAL  shift, and go to state 6

    $default  reduce using rule 16 (global)

    global  go to state 7


State 4

    3 header: HEADER '{' . headerWrapper '}'

    $default  reduce using rule 4 (headerWrapper)

    headerWrapper  go to state 8


State 5

    0 $accept: program $end .

    $default  accept


State 6

   18 global: GLOBAL . '{' $@4 globalWrapper '}'

    '{'  shift, and go to state 9


State 7

    1 program: header global . functionArea

    $default  reduce using rule 22 (functionWrapper)

    functionArea     go to state 10
    functionWrapper  go to state 11


State 8

    3 header: HEADER '{' headerWrapper . '}'
    5 headerWrapper: headerWrapper . headerdcl

    VOID   shift, and go to state 12
    INT    shift, and go to state 13
    FLOAT  shift, and go to state 14
    CHAR   shift, and go to state 15
    BOOL   shift, and go to state 16
    '}'    shift, and go to state 17

    headerdcl      go to state 18
    typePrimitive  go to state 19
    typeFunction   go to state 20


State 9

   18 global: GLOBAL '{' . $@4 globalWrapper '}'

    $default  reduce using rule 17 ($@4)

    $@4  go to state 21


State 10

    1 program: header global functionArea .

    $default  reduce using rule 1 (program)


State 11

   21 functionArea: functionWrapper . main functionWrapper
   23 functionWrapper: functionWrapper . functiondcl

    VOID   shift, and go to state 12
    INT    shift, and go to state 22
    FLOAT  shift, and go to state 14
    CHAR   shift, and go to state 15
    BOOL   shift, and go to state 16

    functiondcl    go to state 23
    main           go to state 24
    typePrimitive  go to state 19
    typeFunction   go to state 25


State 12

  134 typeFunction: VOID .

    $default  reduce using rule 134 (typeFunction)


State 13

  130 typePrimitive: INT .

    $default  reduce using rule 130 (typePrimitive)


State 14

  131 typePrimitive: FLOAT .

    $default  reduce using rule 131 (typePrimitive)


State 15

  129 typePrimitive: CHAR .

    $default  reduce using rule 129 (typePrimitive)


State 16

  128 typePrimitive: BOOL .

    $default  reduce using rule 128 (typePrimitive)


State 17

    3 header: HEADER '{' headerWrapper '}' .

    $default  reduce using rule 3 (header)


State 18

    5 headerWrapper: headerWrapper headerdcl .

    $default  reduce using rule 5 (headerWrapper)


State 19

  135 typeFunction: typePrimitive .

    $default  reduce using rule 135 (typeFunction)


State 20

    7 headerdcl: typeFunction . ID $@1 '(' paramWrapper ')' ';'

    ID  shift, and go to state 26


State 21

   18 global: GLOBAL '{' $@4 . globalWrapper '}'

    $default  reduce using rule 19 (globalWrapper)

    globalWrapper  go to state 27


State 22

   27 main: INT . MAIN '(' ')' '{' statementWrapper '}'
  130 typePrimitive: INT .

    MAIN  shift, and go to state 28

    $default  reduce using rule 130 (typePrimitive)


State 23

   23 functionWrapper: functionWrapper functiondcl .

    $default  reduce using rule 23 (functionWrapper)


State 24

   21 functionArea: functionWrapper main . functionWrapper

    $default  reduce using rule 22 (functionWrapper)

    functionWrapper  go to state 29


State 25

   26 functiondcl: typeFunction . ID $@5 '(' paramWrapper ')' '{' $@6 statementWrapper '}'

    ID  shift, and go to state 30


State 26

    7 headerdcl: typeFunction ID . $@1 '(' paramWrapper ')' ';'

    $default  reduce using rule 6 ($@1)

    $@1  go to state 31


State 27

   18 global: GLOBAL '{' $@4 globalWrapper . '}'
   20 globalWrapper: globalWrapper . variabledcl

    INT     shift, and go to state 13
    FLOAT   shift, and go to state 14
    CHAR    shift, and go to state 15
    BOOL    shift, and go to state 16
    STRING  shift, and go to state 32
    '}'     shift, and go to state 33

    variabledcl    go to state 34
    arraydcl       go to state 35
    typePrimitive  go to state 36


State 28

   27 main: INT MAIN . '(' ')' '{' statementWrapper '}'

    '('  shift, and go to state 37


State 29

   21 functionArea: functionWrapper main functionWrapper .
   23 functionWrapper: functionWrapper . functiondcl

    VOID   shift, and go to state 12
    INT    shift, and go to state 13
    FLOAT  shift, and go to state 14
    CHAR   shift, and go to state 15
    BOOL   shift, and go to state 16

    $default  reduce using rule 21 (functionArea)

    functiondcl    go to state 23
    typePrimitive  go to state 19
    typeFunction   go to state 25


State 30

   26 functiondcl: typeFunction ID . $@5 '(' paramWrapper ')' '{' $@6 statementWrapper '}'

    $default  reduce using rule 24 ($@5)

    $@5  go to state 38


State 31

    7 headerdcl: typeFunction ID $@1 . '(' paramWrapper ')' ';'

    '('  shift, and go to state 39


State 32

   81 variabledcl: STRING . ID '=' LIT_STRING ';'

    ID  shift, and go to state 40


State 33

   18 global: GLOBAL '{' $@4 globalWrapper '}' .

    $default  reduce using rule 18 (global)


State 34

   20 globalWrapper: globalWrapper variabledcl .

    $default  reduce using rule 20 (globalWrapper)


State 35

   82 variabledcl: arraydcl .

    $default  reduce using rule 82 (variabledcl)


State 36

   80 variabledcl: typePrimitive . ID '=' expression ';'
   83 arraydcl: typePrimitive . '[' LIT_INT ']' ID ';'
   84         | typePrimitive . '[' ']' ID '=' ID ';'
   86         | typePrimitive . '[' ']' ID '=' '{' $@30 arrayWrapper '}' ';'

    ID   shift, and go to state 41
    '['  shift, and go to state 42


State 37

   27 main: INT MAIN '(' . ')' '{' statementWrapper '}'

    ')'  shift, and go to state 43


State 38

   26 functiondcl: typeFunction ID $@5 . '(' paramWrapper ')' '{' $@6 statementWrapper '}'

    '('  shift, and go to state 44


State 39

    7 headerdcl: typeFunction ID $@1 '(' . paramWrapper ')' ';'

    ')'       reduce using rule 8 (paramWrapper)
    $default  reduce using rule 10 ($@2)

    paramWrapper           go to state 45
    paramWrapperRecursive  go to state 46
    $@2                    go to state 47


State 40

   81 variabledcl: STRING ID . '=' LIT_STRING ';'

    '='  shift, and go to state 48


State 41

   80 variabledcl: typePrimitive ID . '=' expression ';'

    '='  shift, and go to state 49


State 42

   83 arraydcl: typePrimitive '[' . LIT_INT ']' ID ';'
   84         | typePrimitive '[' . ']' ID '=' ID ';'
   86         | typePrimitive '[' . ']' ID '=' '{' $@30 arrayWrapper '}' ';'

    LIT_INT  shift, and go to state 50
    ']'      shift, and go to state 51


State 43

   27 main: INT MAIN '(' ')' . '{' statementWrapper '}'

    '{'  shift, and go to state 52


State 44

   26 functiondcl: typeFunction ID $@5 '(' . paramWrapper ')' '{' $@6 statementWrapper '}'

    ')'       reduce using rule 8 (paramWrapper)
    $default  reduce using rule 10 ($@2)

    paramWrapper           go to state 53
    paramWrapperRecursive  go to state 46
    $@2                    go to state 47


State 45

    7 headerdcl: typeFunction ID $@1 '(' paramWrapper . ')' ';'

    ')'  shift, and go to state 54


State 46

    9 paramWrapper: paramWrapperRecursive .
   13 paramWrapperRecursive: paramWrapperRecursive . ',' $@3 param

    ','  shift, and go to state 55

    $default  reduce using rule 9 (paramWrapper)


State 47

   11 paramWrapperRecursive: $@2 . param

    INT     shift, and go to state 13
    FLOAT   shift, and go to state 14
    CHAR    shift, and go to state 15
    BOOL    shift, and go to state 16
    STRING  shift, and go to state 56

    param          go to state 57
    typePrimitive  go to state 58
    typeVariable   go to state 59


State 48

   81 variabledcl: STRING ID '=' . LIT_STRING ';'

    LIT_STRING  shift, and go to state 60


State 49

   80 variabledcl: typePrimitive ID '=' . expression ';'

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 70
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 50

   83 arraydcl: typePrimitive '[' LIT_INT . ']' ID ';'

    ']'  shift, and go to state 74


State 51

   84 arraydcl: typePrimitive '[' ']' . ID '=' ID ';'
   86         | typePrimitive '[' ']' . ID '=' '{' $@30 arrayWrapper '}' ';'

    ID  shift, and go to state 75


State 52

   27 main: INT MAIN '(' ')' '{' . statementWrapper '}'

    $default  reduce using rule 28 (statementWrapper)

    statementWrapper  go to state 76


State 53

   26 functiondcl: typeFunction ID $@5 '(' paramWrapper . ')' '{' $@6 statementWrapper '}'

    ')'  shift, and go to state 77


State 54

    7 headerdcl: typeFunction ID $@1 '(' paramWrapper ')' . ';'

    ';'  shift, and go to state 78


State 55

   13 paramWrapperRecursive: paramWrapperRecursive ',' . $@3 param

    $default  reduce using rule 12 ($@3)

    $@3  go to state 79


State 56

  132 typeVariable: STRING .

    $default  reduce using rule 132 (typeVariable)


State 57

   11 paramWrapperRecursive: $@2 param .

    $default  reduce using rule 11 (paramWrapperRecursive)


State 58

   15 param: typePrimitive . '[' ']' ID
  133 typeVariable: typePrimitive .

    '['  shift, and go to state 80

    $default  reduce using rule 133 (typeVariable)


State 59

   14 param: typeVariable . ID

    ID  shift, and go to state 81


State 60

   81 variabledcl: STRING ID '=' LIT_STRING . ';'

    ';'  shift, and go to state 82


State 61

   97 expression: NOT . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 83
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 62

  114 literals: LIT_INT .

    $default  reduce using rule 114 (literals)


State 63

  115 literals: LIT_FLOAT .

    $default  reduce using rule 115 (literals)


State 64

  116 literals: LIT_CHAR .

    $default  reduce using rule 116 (literals)


State 65

  118 boolLiteral: TRUE .

    $default  reduce using rule 118 (boolLiteral)


State 66

  119 boolLiteral: FALSE .

    $default  reduce using rule 119 (boolLiteral)


State 67

   94 expression: ID . '[' LIT_INT ']'
   95           | ID .
  121 functionCall: ID . $@33 '(' paramsFunctionCallWrapper ')'

    '['  shift, and go to state 84

    '('       reduce using rule 120 ($@33)
    $default  reduce using rule 95 (expression)

    $@33  go to state 85


State 68

   98 expression: '-' . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 86
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 69

   99 expression: '(' . expression ')'

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 87
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 70

   80 variabledcl: typePrimitive ID '=' expression . ';'
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101
    ';'        shift, and go to state 102


State 71

   96 expression: literals .

    $default  reduce using rule 96 (expression)


State 72

  117 literals: boolLiteral .

    $default  reduce using rule 117 (literals)


State 73

   93 expression: functionCall .

    $default  reduce using rule 93 (expression)


State 74

   83 arraydcl: typePrimitive '[' LIT_INT ']' . ID ';'

    ID  shift, and go to state 103


State 75

   84 arraydcl: typePrimitive '[' ']' ID . '=' ID ';'
   86         | typePrimitive '[' ']' ID . '=' '{' $@30 arrayWrapper '}' ';'

    '='  shift, and go to state 104


State 76

   27 main: INT MAIN '(' ')' '{' statementWrapper . '}'
   29 statementWrapper: statementWrapper . statement

    DO        shift, and go to state 105
    CONTINUE  shift, and go to state 106
    BREAK     shift, and go to state 107
    INT       shift, and go to state 13
    FLOAT     shift, and go to state 14
    CHAR      shift, and go to state 15
    BOOL      shift, and go to state 16
    STRING    shift, and go to state 32
    RETURN    shift, and go to state 108
    PRINT     shift, and go to state 109
    ID        shift, and go to state 110
    '}'       shift, and go to state 111

    IF        reduce using rule 60 (@21)
    WHILE     reduce using rule 53 (@15)
    $default  reduce using rule 44 (@7)

    statement      go to state 112
    loop           go to state 113
    forLoop        go to state 114
    @7             go to state 115
    whileLoop      go to state 116
    @15            go to state 117
    conditional    go to state 118
    @21            go to state 119
    varAssign      go to state 120
    variabledcl    go to state 121
    arraydcl       go to state 35
    functionCall   go to state 122
    typePrimitive  go to state 36


State 77

   26 functiondcl: typeFunction ID $@5 '(' paramWrapper ')' . '{' $@6 statementWrapper '}'

    '{'  shift, and go to state 123


State 78

    7 headerdcl: typeFunction ID $@1 '(' paramWrapper ')' ';' .

    $default  reduce using rule 7 (headerdcl)


State 79

   13 paramWrapperRecursive: paramWrapperRecursive ',' $@3 . param

    INT     shift, and go to state 13
    FLOAT   shift, and go to state 14
    CHAR    shift, and go to state 15
    BOOL    shift, and go to state 16
    STRING  shift, and go to state 56

    param          go to state 124
    typePrimitive  go to state 58
    typeVariable   go to state 59


State 80

   15 param: typePrimitive '[' . ']' ID

    ']'  shift, and go to state 125


State 81

   14 param: typeVariable ID .

    $default  reduce using rule 14 (param)


State 82

   81 variabledcl: STRING ID '=' LIT_STRING ';' .

    $default  reduce using rule 81 (variabledcl)


State 83

   97 expression: NOT expression .
  100           | expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    $default  reduce using rule 97 (expression)


State 84

   94 expression: ID '[' . LIT_INT ']'

    LIT_INT  shift, and go to state 126


State 85

  121 functionCall: ID $@33 . '(' paramsFunctionCallWrapper ')'

    '('  shift, and go to state 127


State 86

   98 expression: '-' expression .
  100           | expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100
    '^'  shift, and go to state 101

    $default  reduce using rule 98 (expression)


State 87

   99 expression: '(' expression . ')'
  100           | expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101
    ')'        shift, and go to state 128


State 88

  107 expression: expression AND . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 129
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 89

  106 expression: expression OR . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 130
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 90

  100 expression: expression EQUALS . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 131
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 91

  101 expression: expression NOT_EQ . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 132
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 92

  102 expression: expression LESS_EQ . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 133
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 93

  103 expression: expression BIGGER_EQ . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 134
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 94

  105 expression: expression '<' . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 135
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 95

  104 expression: expression '>' . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 136
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 96

  108 expression: expression '+' . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 137
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 97

  109 expression: expression '-' . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 138
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 98

  110 expression: expression '*' . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 139
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 99

  111 expression: expression '/' . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 140
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 100

  113 expression: expression '%' . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 141
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 101

  112 expression: expression '^' . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 142
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 102

   80 variabledcl: typePrimitive ID '=' expression ';' .

    $default  reduce using rule 80 (variabledcl)


State 103

   83 arraydcl: typePrimitive '[' LIT_INT ']' ID . ';'

    ';'  shift, and go to state 143


State 104

   84 arraydcl: typePrimitive '[' ']' ID '=' . ID ';'
   86         | typePrimitive '[' ']' ID '=' . '{' $@30 arrayWrapper '}' ';'

    ID   shift, and go to state 144
    '{'  shift, and go to state 145


State 105

   43 loop: DO . whileLoop

    $default  reduce using rule 53 (@15)

    whileLoop  go to state 146
    @15        go to state 117


State 106

   37 statement: CONTINUE . ';'

    ';'  shift, and go to state 147


State 107

   35 statement: BREAK . ';'

    ';'  shift, and go to state 148


State 108

   38 statement: RETURN . expression ';'

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 149
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 109

   36 statement: PRINT . '(' printeableThings ')' ';'

    '('  shift, and go to state 150


State 110

   75 varAssign: ID . '=' expression
   76          | ID . ASSIGN_ADD expression
   77          | ID . ASSIGN_SUBS expression
   78          | ID . ASSIGN_MULT expression
   79          | ID . ASSIGN_DIV expression
  121 functionCall: ID . $@33 '(' paramsFunctionCallWrapper ')'

    ASSIGN_ADD   shift, and go to state 151
    ASSIGN_SUBS  shift, and go to state 152
    ASSIGN_MULT  shift, and go to state 153
    ASSIGN_DIV   shift, and go to state 154
    '='          shift, and go to state 155

    $default  reduce using rule 120 ($@33)

    $@33  go to state 85


State 111

   27 main: INT MAIN '(' ')' '{' statementWrapper '}' .

    $default  reduce using rule 27 (main)


State 112

   29 statementWrapper: statementWrapper statement .

    $default  reduce using rule 29 (statementWrapper)


State 113

   30 statement: loop .

    $default  reduce using rule 30 (statement)


State 114

   41 loop: forLoop .

    $default  reduce using rule 41 (loop)


State 115

   52 forLoop: @7 . @8 @9 @10 FOR '(' $@11 variabledcl $@12 $@13 expression ';' $@14 varAssign ')' '{' statementWrapper '}'

    $default  reduce using rule 45 (@8)

    @8  go to state 156


State 116

   42 loop: whileLoop .

    $default  reduce using rule 42 (loop)


State 117

   59 whileLoop: @15 . @16 @17 @18 $@19 WHILE '(' expression ')' $@20 '{' statementWrapper '}'

    $default  reduce using rule 54 (@16)

    @16  go to state 157


State 118

   31 statement: conditional .

    $default  reduce using rule 31 (statement)


State 119

   63 conditional: @21 . @22 $@23 ifCond elifCond elseCond

    $default  reduce using rule 61 (@22)

    @22  go to state 158


State 120

   34 statement: varAssign . ';'

    ';'  shift, and go to state 159


State 121

   32 statement: variabledcl .

    $default  reduce using rule 32 (statement)


State 122

   33 statement: functionCall . ';'

    ';'  shift, and go to state 160


State 123

   26 functiondcl: typeFunction ID $@5 '(' paramWrapper ')' '{' . $@6 statementWrapper '}'

    $default  reduce using rule 25 ($@6)

    $@6  go to state 161


State 124

   13 paramWrapperRecursive: paramWrapperRecursive ',' $@3 param .

    $default  reduce using rule 13 (paramWrapperRecursive)


State 125

   15 param: typePrimitive '[' ']' . ID

    ID  shift, and go to state 162


State 126

   94 expression: ID '[' LIT_INT . ']'

    ']'  shift, and go to state 163


State 127

  121 functionCall: ID $@33 '(' . paramsFunctionCallWrapper ')'

    ')'       reduce using rule 122 (paramsFunctionCallWrapper)
    $default  reduce using rule 126 ($@35)

    paramsFunctionCallWrapper  go to state 164
    paramsFunctionCall         go to state 165
    $@35                       go to state 166


State 128

   99 expression: '(' expression ')' .

    $default  reduce using rule 99 (expression)


State 129

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  107           | expression AND expression .
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 107 (expression)


State 130

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  106           | expression OR expression .
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 106 (expression)


State 131

  100 expression: expression . EQUALS expression
  100           | expression EQUALS expression .
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 100 (expression)


State 132

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  101           | expression NOT_EQ expression .
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 101 (expression)


State 133

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  102           | expression LESS_EQ expression .
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100
    '^'  shift, and go to state 101

    $default  reduce using rule 102 (expression)


State 134

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  103           | expression BIGGER_EQ expression .
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100
    '^'  shift, and go to state 101

    $default  reduce using rule 103 (expression)


State 135

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  105           | expression '<' expression .
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100
    '^'  shift, and go to state 101

    $default  reduce using rule 105 (expression)


State 136

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  104           | expression '>' expression .
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100
    '^'  shift, and go to state 101

    $default  reduce using rule 104 (expression)


State 137

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  108           | expression '+' expression .
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100
    '^'  shift, and go to state 101

    $default  reduce using rule 108 (expression)


State 138

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  109           | expression '-' expression .
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100
    '^'  shift, and go to state 101

    $default  reduce using rule 109 (expression)


State 139

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  110           | expression '*' expression .
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    '^'  shift, and go to state 101

    $default  reduce using rule 110 (expression)


State 140

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  111           | expression '/' expression .
  112           | expression . '^' expression
  113           | expression . '%' expression

    '^'  shift, and go to state 101

    $default  reduce using rule 111 (expression)


State 141

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression
  113           | expression '%' expression .

    '^'  shift, and go to state 101

    $default  reduce using rule 113 (expression)


State 142

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  112           | expression '^' expression .
  113           | expression . '%' expression

    '^'  shift, and go to state 101

    $default  reduce using rule 112 (expression)


State 143

   83 arraydcl: typePrimitive '[' LIT_INT ']' ID ';' .

    $default  reduce using rule 83 (arraydcl)


State 144

   84 arraydcl: typePrimitive '[' ']' ID '=' ID . ';'

    ';'  shift, and go to state 167


State 145

   86 arraydcl: typePrimitive '[' ']' ID '=' '{' . $@30 arrayWrapper '}' ';'

    $default  reduce using rule 85 ($@30)

    $@30  go to state 168


State 146

   43 loop: DO whileLoop .

    $default  reduce using rule 43 (loop)


State 147

   37 statement: CONTINUE ';' .

    $default  reduce using rule 37 (statement)


State 148

   35 statement: BREAK ';' .

    $default  reduce using rule 35 (statement)


State 149

   38 statement: RETURN expression . ';'
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101
    ';'        shift, and go to state 169


State 150

   36 statement: PRINT '(' . printeableThings ')' ';'

    NOT         shift, and go to state 61
    LIT_INT     shift, and go to state 62
    LIT_FLOAT   shift, and go to state 63
    LIT_CHAR    shift, and go to state 64
    LIT_STRING  shift, and go to state 170
    TRUE        shift, and go to state 65
    FALSE       shift, and go to state 66
    ID          shift, and go to state 67
    '-'         shift, and go to state 68
    '('         shift, and go to state 69

    printeableThings  go to state 171
    expression        go to state 172
    literals          go to state 71
    boolLiteral       go to state 72
    functionCall      go to state 73


State 151

   76 varAssign: ID ASSIGN_ADD . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 173
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 152

   77 varAssign: ID ASSIGN_SUBS . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 174
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 153

   78 varAssign: ID ASSIGN_MULT . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 175
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 154

   79 varAssign: ID ASSIGN_DIV . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 176
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 155

   75 varAssign: ID '=' . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 177
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 156

   52 forLoop: @7 @8 . @9 @10 FOR '(' $@11 variabledcl $@12 $@13 expression ';' $@14 varAssign ')' '{' statementWrapper '}'

    $default  reduce using rule 46 (@9)

    @9  go to state 178


State 157

   59 whileLoop: @15 @16 . @17 @18 $@19 WHILE '(' expression ')' $@20 '{' statementWrapper '}'

    $default  reduce using rule 55 (@17)

    @17  go to state 179


State 158

   63 conditional: @21 @22 . $@23 ifCond elifCond elseCond

    $default  reduce using rule 62 ($@23)

    $@23  go to state 180


State 159

   34 statement: varAssign ';' .

    $default  reduce using rule 34 (statement)


State 160

   33 statement: functionCall ';' .

    $default  reduce using rule 33 (statement)


State 161

   26 functiondcl: typeFunction ID $@5 '(' paramWrapper ')' '{' $@6 . statementWrapper '}'

    $default  reduce using rule 28 (statementWrapper)

    statementWrapper  go to state 181


State 162

   15 param: typePrimitive '[' ']' ID .

    $default  reduce using rule 15 (param)


State 163

   94 expression: ID '[' LIT_INT ']' .

    $default  reduce using rule 94 (expression)


State 164

  121 functionCall: ID $@33 '(' paramsFunctionCallWrapper . ')'

    ')'  shift, and go to state 182


State 165

  123 paramsFunctionCallWrapper: paramsFunctionCall .
  125 paramsFunctionCall: paramsFunctionCall . ',' $@34 expression

    ','  shift, and go to state 183

    $default  reduce using rule 123 (paramsFunctionCallWrapper)


State 166

  127 paramsFunctionCall: $@35 . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 184
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 167

   84 arraydcl: typePrimitive '[' ']' ID '=' ID ';' .

    $default  reduce using rule 84 (arraydcl)


State 168

   86 arraydcl: typePrimitive '[' ']' ID '=' '{' $@30 . arrayWrapper '}' ';'

    '}'       reduce using rule 87 (arrayWrapper)
    $default  reduce using rule 89 ($@31)

    arrayWrapper  go to state 185
    array         go to state 186
    $@31          go to state 187


State 169

   38 statement: RETURN expression ';' .

    $default  reduce using rule 38 (statement)


State 170

   40 printeableThings: LIT_STRING .

    $default  reduce using rule 40 (printeableThings)


State 171

   36 statement: PRINT '(' printeableThings . ')' ';'

    ')'  shift, and go to state 188


State 172

   39 printeableThings: expression .
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 39 (printeableThings)


State 173

   76 varAssign: ID ASSIGN_ADD expression .
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 76 (varAssign)


State 174

   77 varAssign: ID ASSIGN_SUBS expression .
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 77 (varAssign)


State 175

   78 varAssign: ID ASSIGN_MULT expression .
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 78 (varAssign)


State 176

   79 varAssign: ID ASSIGN_DIV expression .
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 79 (varAssign)


State 177

   75 varAssign: ID '=' expression .
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 75 (varAssign)


State 178

   52 forLoop: @7 @8 @9 . @10 FOR '(' $@11 variabledcl $@12 $@13 expression ';' $@14 varAssign ')' '{' statementWrapper '}'

    $default  reduce using rule 47 (@10)

    @10  go to state 189


State 179

   59 whileLoop: @15 @16 @17 . @18 $@19 WHILE '(' expression ')' $@20 '{' statementWrapper '}'

    $default  reduce using rule 56 (@18)

    @18  go to state 190


State 180

   63 conditional: @21 @22 $@23 . ifCond elifCond elseCond

    $default  reduce using rule 64 (@24)

    ifCond  go to state 191
    @24     go to state 192


State 181

   26 functiondcl: typeFunction ID $@5 '(' paramWrapper ')' '{' $@6 statementWrapper . '}'
   29 statementWrapper: statementWrapper . statement

    DO        shift, and go to state 105
    CONTINUE  shift, and go to state 106
    BREAK     shift, and go to state 107
    INT       shift, and go to state 13
    FLOAT     shift, and go to state 14
    CHAR      shift, and go to state 15
    BOOL      shift, and go to state 16
    STRING    shift, and go to state 32
    RETURN    shift, and go to state 108
    PRINT     shift, and go to state 109
    ID        shift, and go to state 110
    '}'       shift, and go to state 193

    IF        reduce using rule 60 (@21)
    WHILE     reduce using rule 53 (@15)
    $default  reduce using rule 44 (@7)

    statement      go to state 112
    loop           go to state 113
    forLoop        go to state 114
    @7             go to state 115
    whileLoop      go to state 116
    @15            go to state 117
    conditional    go to state 118
    @21            go to state 119
    varAssign      go to state 120
    variabledcl    go to state 121
    arraydcl       go to state 35
    functionCall   go to state 122
    typePrimitive  go to state 36


State 182

  121 functionCall: ID $@33 '(' paramsFunctionCallWrapper ')' .

    $default  reduce using rule 121 (functionCall)


State 183

  125 paramsFunctionCall: paramsFunctionCall ',' . $@34 expression

    $default  reduce using rule 124 ($@34)

    $@34  go to state 194


State 184

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression
  127 paramsFunctionCall: $@35 expression .

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 127 (paramsFunctionCall)


State 185

   86 arraydcl: typePrimitive '[' ']' ID '=' '{' $@30 arrayWrapper . '}' ';'

    '}'  shift, and go to state 195


State 186

   88 arrayWrapper: array .
   92 array: array . ',' $@32 expression

    ','  shift, and go to state 196

    $default  reduce using rule 88 (arrayWrapper)


State 187

   90 array: $@31 . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 197
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 188

   36 statement: PRINT '(' printeableThings ')' . ';'

    ';'  shift, and go to state 198


State 189

   52 forLoop: @7 @8 @9 @10 . FOR '(' $@11 variabledcl $@12 $@13 expression ';' $@14 varAssign ')' '{' statementWrapper '}'

    FOR  shift, and go to state 199


State 190

   59 whileLoop: @15 @16 @17 @18 . $@19 WHILE '(' expression ')' $@20 '{' statementWrapper '}'

    $default  reduce using rule 57 ($@19)

    $@19  go to state 200


State 191

   63 conditional: @21 @22 $@23 ifCond . elifCond elseCond

    $default  reduce using rule 68 (elifCond)

    elifCond  go to state 201


State 192

   67 ifCond: @24 . IF '(' expression ')' $@25 '{' statementWrapper $@26 '}'

    IF  shift, and go to state 202


State 193

   26 functiondcl: typeFunction ID $@5 '(' paramWrapper ')' '{' $@6 statementWrapper '}' .

    $default  reduce using rule 26 (functiondcl)


State 194

  125 paramsFunctionCall: paramsFunctionCall ',' $@34 . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 203
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 195

   86 arraydcl: typePrimitive '[' ']' ID '=' '{' $@30 arrayWrapper '}' . ';'

    ';'  shift, and go to state 204


State 196

   92 array: array ',' . $@32 expression

    $default  reduce using rule 91 ($@32)

    $@32  go to state 205


State 197

   90 array: $@31 expression .
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 90 (array)


State 198

   36 statement: PRINT '(' printeableThings ')' ';' .

    $default  reduce using rule 36 (statement)


State 199

   52 forLoop: @7 @8 @9 @10 FOR . '(' $@11 variabledcl $@12 $@13 expression ';' $@14 varAssign ')' '{' statementWrapper '}'

    '('  shift, and go to state 206


State 200

   59 whileLoop: @15 @16 @17 @18 $@19 . WHILE '(' expression ')' $@20 '{' statementWrapper '}'

    WHILE  shift, and go to state 207


State 201

   63 conditional: @21 @22 $@23 ifCond elifCond . elseCond
   72 elifCond: elifCond . @27 ELIF '(' expression ')' $@28 '{' statementWrapper $@29 '}'

    ELSE  shift, and go to state 208

    ELIF      reduce using rule 69 (@27)
    $default  reduce using rule 73 (elseCond)

    @27       go to state 209
    elseCond  go to state 210


State 202

   67 ifCond: @24 IF . '(' expression ')' $@25 '{' statementWrapper $@26 '}'

    '('  shift, and go to state 211


State 203

  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression
  125 paramsFunctionCall: paramsFunctionCall ',' $@34 expression .

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 125 (paramsFunctionCall)


State 204

   86 arraydcl: typePrimitive '[' ']' ID '=' '{' $@30 arrayWrapper '}' ';' .

    $default  reduce using rule 86 (arraydcl)


State 205

   92 array: array ',' $@32 . expression

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 212
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 206

   52 forLoop: @7 @8 @9 @10 FOR '(' . $@11 variabledcl $@12 $@13 expression ';' $@14 varAssign ')' '{' statementWrapper '}'

    $default  reduce using rule 48 ($@11)

    $@11  go to state 213


State 207

   59 whileLoop: @15 @16 @17 @18 $@19 WHILE . '(' expression ')' $@20 '{' statementWrapper '}'

    '('  shift, and go to state 214


State 208

   74 elseCond: ELSE . '{' statementWrapper '}'

    '{'  shift, and go to state 215


State 209

   72 elifCond: elifCond @27 . ELIF '(' expression ')' $@28 '{' statementWrapper $@29 '}'

    ELIF  shift, and go to state 216


State 210

   63 conditional: @21 @22 $@23 ifCond elifCond elseCond .

    $default  reduce using rule 63 (conditional)


State 211

   67 ifCond: @24 IF '(' . expression ')' $@25 '{' statementWrapper $@26 '}'

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 217
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 212

   92 array: array ',' $@32 expression .
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101

    $default  reduce using rule 92 (array)


State 213

   52 forLoop: @7 @8 @9 @10 FOR '(' $@11 . variabledcl $@12 $@13 expression ';' $@14 varAssign ')' '{' statementWrapper '}'

    INT     shift, and go to state 13
    FLOAT   shift, and go to state 14
    CHAR    shift, and go to state 15
    BOOL    shift, and go to state 16
    STRING  shift, and go to state 32

    variabledcl    go to state 218
    arraydcl       go to state 35
    typePrimitive  go to state 36


State 214

   59 whileLoop: @15 @16 @17 @18 $@19 WHILE '(' . expression ')' $@20 '{' statementWrapper '}'

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 219
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 215

   74 elseCond: ELSE '{' . statementWrapper '}'

    $default  reduce using rule 28 (statementWrapper)

    statementWrapper  go to state 220


State 216

   72 elifCond: elifCond @27 ELIF . '(' expression ')' $@28 '{' statementWrapper $@29 '}'

    '('  shift, and go to state 221


State 217

   67 ifCond: @24 IF '(' expression . ')' $@25 '{' statementWrapper $@26 '}'
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101
    ')'        shift, and go to state 222


State 218

   52 forLoop: @7 @8 @9 @10 FOR '(' $@11 variabledcl . $@12 $@13 expression ';' $@14 varAssign ')' '{' statementWrapper '}'

    $default  reduce using rule 49 ($@12)

    $@12  go to state 223


State 219

   59 whileLoop: @15 @16 @17 @18 $@19 WHILE '(' expression . ')' $@20 '{' statementWrapper '}'
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101
    ')'        shift, and go to state 224


State 220

   29 statementWrapper: statementWrapper . statement
   74 elseCond: ELSE '{' statementWrapper . '}'

    DO        shift, and go to state 105
    CONTINUE  shift, and go to state 106
    BREAK     shift, and go to state 107
    INT       shift, and go to state 13
    FLOAT     shift, and go to state 14
    CHAR      shift, and go to state 15
    BOOL      shift, and go to state 16
    STRING    shift, and go to state 32
    RETURN    shift, and go to state 108
    PRINT     shift, and go to state 109
    ID        shift, and go to state 110
    '}'       shift, and go to state 225

    IF        reduce using rule 60 (@21)
    WHILE     reduce using rule 53 (@15)
    $default  reduce using rule 44 (@7)

    statement      go to state 112
    loop           go to state 113
    forLoop        go to state 114
    @7             go to state 115
    whileLoop      go to state 116
    @15            go to state 117
    conditional    go to state 118
    @21            go to state 119
    varAssign      go to state 120
    variabledcl    go to state 121
    arraydcl       go to state 35
    functionCall   go to state 122
    typePrimitive  go to state 36


State 221

   72 elifCond: elifCond @27 ELIF '(' . expression ')' $@28 '{' statementWrapper $@29 '}'

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 226
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 222

   67 ifCond: @24 IF '(' expression ')' . $@25 '{' statementWrapper $@26 '}'

    $default  reduce using rule 65 ($@25)

    $@25  go to state 227


State 223

   52 forLoop: @7 @8 @9 @10 FOR '(' $@11 variabledcl $@12 . $@13 expression ';' $@14 varAssign ')' '{' statementWrapper '}'

    $default  reduce using rule 50 ($@13)

    $@13  go to state 228


State 224

   59 whileLoop: @15 @16 @17 @18 $@19 WHILE '(' expression ')' . $@20 '{' statementWrapper '}'

    $default  reduce using rule 58 ($@20)

    $@20  go to state 229


State 225

   74 elseCond: ELSE '{' statementWrapper '}' .

    $default  reduce using rule 74 (elseCond)


State 226

   72 elifCond: elifCond @27 ELIF '(' expression . ')' $@28 '{' statementWrapper $@29 '}'
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101
    ')'        shift, and go to state 230


State 227

   67 ifCond: @24 IF '(' expression ')' $@25 . '{' statementWrapper $@26 '}'

    '{'  shift, and go to state 231


State 228

   52 forLoop: @7 @8 @9 @10 FOR '(' $@11 variabledcl $@12 $@13 . expression ';' $@14 varAssign ')' '{' statementWrapper '}'

    NOT        shift, and go to state 61
    LIT_INT    shift, and go to state 62
    LIT_FLOAT  shift, and go to state 63
    LIT_CHAR   shift, and go to state 64
    TRUE       shift, and go to state 65
    FALSE      shift, and go to state 66
    ID         shift, and go to state 67
    '-'        shift, and go to state 68
    '('        shift, and go to state 69

    expression    go to state 232
    literals      go to state 71
    boolLiteral   go to state 72
    functionCall  go to state 73


State 229

   59 whileLoop: @15 @16 @17 @18 $@19 WHILE '(' expression ')' $@20 . '{' statementWrapper '}'

    '{'  shift, and go to state 233


State 230

   72 elifCond: elifCond @27 ELIF '(' expression ')' . $@28 '{' statementWrapper $@29 '}'

    $default  reduce using rule 70 ($@28)

    $@28  go to state 234


State 231

   67 ifCond: @24 IF '(' expression ')' $@25 '{' . statementWrapper $@26 '}'

    $default  reduce using rule 28 (statementWrapper)

    statementWrapper  go to state 235


State 232

   52 forLoop: @7 @8 @9 @10 FOR '(' $@11 variabledcl $@12 $@13 expression . ';' $@14 varAssign ')' '{' statementWrapper '}'
  100 expression: expression . EQUALS expression
  101           | expression . NOT_EQ expression
  102           | expression . LESS_EQ expression
  103           | expression . BIGGER_EQ expression
  104           | expression . '>' expression
  105           | expression . '<' expression
  106           | expression . OR expression
  107           | expression . AND expression
  108           | expression . '+' expression
  109           | expression . '-' expression
  110           | expression . '*' expression
  111           | expression . '/' expression
  112           | expression . '^' expression
  113           | expression . '%' expression

    AND        shift, and go to state 88
    OR         shift, and go to state 89
    EQUALS     shift, and go to state 90
    NOT_EQ     shift, and go to state 91
    LESS_EQ    shift, and go to state 92
    BIGGER_EQ  shift, and go to state 93
    '<'        shift, and go to state 94
    '>'        shift, and go to state 95
    '+'        shift, and go to state 96
    '-'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '%'        shift, and go to state 100
    '^'        shift, and go to state 101
    ';'        shift, and go to state 236


State 233

   59 whileLoop: @15 @16 @17 @18 $@19 WHILE '(' expression ')' $@20 '{' . statementWrapper '}'

    $default  reduce using rule 28 (statementWrapper)

    statementWrapper  go to state 237


State 234

   72 elifCond: elifCond @27 ELIF '(' expression ')' $@28 . '{' statementWrapper $@29 '}'

    '{'  shift, and go to state 238


State 235

   29 statementWrapper: statementWrapper . statement
   67 ifCond: @24 IF '(' expression ')' $@25 '{' statementWrapper . $@26 '}'

    DO        shift, and go to state 105
    CONTINUE  shift, and go to state 106
    BREAK     shift, and go to state 107
    INT       shift, and go to state 13
    FLOAT     shift, and go to state 14
    CHAR      shift, and go to state 15
    BOOL      shift, and go to state 16
    STRING    shift, and go to state 32
    RETURN    shift, and go to state 108
    PRINT     shift, and go to state 109
    ID        shift, and go to state 110

    IF        reduce using rule 60 (@21)
    WHILE     reduce using rule 53 (@15)
    '}'       reduce using rule 66 ($@26)
    $default  reduce using rule 44 (@7)

    statement      go to state 112
    loop           go to state 113
    forLoop        go to state 114
    @7             go to state 115
    whileLoop      go to state 116
    @15            go to state 117
    conditional    go to state 118
    @21            go to state 119
    $@26           go to state 239
    varAssign      go to state 120
    variabledcl    go to state 121
    arraydcl       go to state 35
    functionCall   go to state 122
    typePrimitive  go to state 36


State 236

   52 forLoop: @7 @8 @9 @10 FOR '(' $@11 variabledcl $@12 $@13 expression ';' . $@14 varAssign ')' '{' statementWrapper '}'

    $default  reduce using rule 51 ($@14)

    $@14  go to state 240


State 237

   29 statementWrapper: statementWrapper . statement
   59 whileLoop: @15 @16 @17 @18 $@19 WHILE '(' expression ')' $@20 '{' statementWrapper . '}'

    DO        shift, and go to state 105
    CONTINUE  shift, and go to state 106
    BREAK     shift, and go to state 107
    INT       shift, and go to state 13
    FLOAT     shift, and go to state 14
    CHAR      shift, and go to state 15
    BOOL      shift, and go to state 16
    STRING    shift, and go to state 32
    RETURN    shift, and go to state 108
    PRINT     shift, and go to state 109
    ID        shift, and go to state 110
    '}'       shift, and go to state 241

    IF        reduce using rule 60 (@21)
    WHILE     reduce using rule 53 (@15)
    $default  reduce using rule 44 (@7)

    statement      go to state 112
    loop           go to state 113
    forLoop        go to state 114
    @7             go to state 115
    whileLoop      go to state 116
    @15            go to state 117
    conditional    go to state 118
    @21            go to state 119
    varAssign      go to state 120
    variabledcl    go to state 121
    arraydcl       go to state 35
    functionCall   go to state 122
    typePrimitive  go to state 36


State 238

   72 elifCond: elifCond @27 ELIF '(' expression ')' $@28 '{' . statementWrapper $@29 '}'

    $default  reduce using rule 28 (statementWrapper)

    statementWrapper  go to state 242


State 239

   67 ifCond: @24 IF '(' expression ')' $@25 '{' statementWrapper $@26 . '}'

    '}'  shift, and go to state 243


State 240

   52 forLoop: @7 @8 @9 @10 FOR '(' $@11 variabledcl $@12 $@13 expression ';' $@14 . varAssign ')' '{' statementWrapper '}'

    ID  shift, and go to state 244

    varAssign  go to state 245


State 241

   59 whileLoop: @15 @16 @17 @18 $@19 WHILE '(' expression ')' $@20 '{' statementWrapper '}' .

    $default  reduce using rule 59 (whileLoop)


State 242

   29 statementWrapper: statementWrapper . statement
   72 elifCond: elifCond @27 ELIF '(' expression ')' $@28 '{' statementWrapper . $@29 '}'

    DO        shift, and go to state 105
    CONTINUE  shift, and go to state 106
    BREAK     shift, and go to state 107
    INT       shift, and go to state 13
    FLOAT     shift, and go to state 14
    CHAR      shift, and go to state 15
    BOOL      shift, and go to state 16
    STRING    shift, and go to state 32
    RETURN    shift, and go to state 108
    PRINT     shift, and go to state 109
    ID        shift, and go to state 110

    IF        reduce using rule 60 (@21)
    WHILE     reduce using rule 53 (@15)
    '}'       reduce using rule 71 ($@29)
    $default  reduce using rule 44 (@7)

    statement      go to state 112
    loop           go to state 113
    forLoop        go to state 114
    @7             go to state 115
    whileLoop      go to state 116
    @15            go to state 117
    conditional    go to state 118
    @21            go to state 119
    $@29           go to state 246
    varAssign      go to state 120
    variabledcl    go to state 121
    arraydcl       go to state 35
    functionCall   go to state 122
    typePrimitive  go to state 36


State 243

   67 ifCond: @24 IF '(' expression ')' $@25 '{' statementWrapper $@26 '}' .

    $default  reduce using rule 67 (ifCond)


State 244

   75 varAssign: ID . '=' expression
   76          | ID . ASSIGN_ADD expression
   77          | ID . ASSIGN_SUBS expression
   78          | ID . ASSIGN_MULT expression
   79          | ID . ASSIGN_DIV expression

    ASSIGN_ADD   shift, and go to state 151
    ASSIGN_SUBS  shift, and go to state 152
    ASSIGN_MULT  shift, and go to state 153
    ASSIGN_DIV   shift, and go to state 154
    '='          shift, and go to state 155


State 245

   52 forLoop: @7 @8 @9 @10 FOR '(' $@11 variabledcl $@12 $@13 expression ';' $@14 varAssign . ')' '{' statementWrapper '}'

    ')'  shift, and go to state 247


State 246

   72 elifCond: elifCond @27 ELIF '(' expression ')' $@28 '{' statementWrapper $@29 . '}'

    '}'  shift, and go to state 248


State 247

   52 forLoop: @7 @8 @9 @10 FOR '(' $@11 variabledcl $@12 $@13 expression ';' $@14 varAssign ')' . '{' statementWrapper '}'

    '{'  shift, and go to state 249


State 248

   72 elifCond: elifCond @27 ELIF '(' expression ')' $@28 '{' statementWrapper $@29 '}' .

    $default  reduce using rule 72 (elifCond)


State 249

   52 forLoop: @7 @8 @9 @10 FOR '(' $@11 variabledcl $@12 $@13 expression ';' $@14 varAssign ')' '{' . statementWrapper '}'

    $default  reduce using rule 28 (statementWrapper)

    statementWrapper  go to state 250


State 250

   29 statementWrapper: statementWrapper . statement
   52 forLoop: @7 @8 @9 @10 FOR '(' $@11 variabledcl $@12 $@13 expression ';' $@14 varAssign ')' '{' statementWrapper . '}'

    DO        shift, and go to state 105
    CONTINUE  shift, and go to state 106
    BREAK     shift, and go to state 107
    INT       shift, and go to state 13
    FLOAT     shift, and go to state 14
    CHAR      shift, and go to state 15
    BOOL      shift, and go to state 16
    STRING    shift, and go to state 32
    RETURN    shift, and go to state 108
    PRINT     shift, and go to state 109
    ID        shift, and go to state 110
    '}'       shift, and go to state 251

    IF        reduce using rule 60 (@21)
    WHILE     reduce using rule 53 (@15)
    $default  reduce using rule 44 (@7)

    statement      go to state 112
    loop           go to state 113
    forLoop        go to state 114
    @7             go to state 115
    whileLoop      go to state 116
    @15            go to state 117
    conditional    go to state 118
    @21            go to state 119
    varAssign      go to state 120
    variabledcl    go to state 121
    arraydcl       go to state 35
    functionCall   go to state 122
    typePrimitive  go to state 36


State 251

   52 forLoop: @7 @8 @9 @10 FOR '(' $@11 variabledcl $@12 $@13 expression ';' $@14 varAssign ')' '{' statementWrapper '}' .

    $default  reduce using rule 52 (forLoop)
